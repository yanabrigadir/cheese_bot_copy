from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile, CallbackQuery

from db.dao.user_dao import UserAlreadyExistsError
from services.user_service import UserService

from tgbot.keyboards.inline_kb import (
    start_kb,
    explanation_kb,
    how_much_kb,
    payments_methods_kb
)

router = Router()


@router.message(CommandStart())
async def start_handler(message: Message, user_service: UserService) -> None:
    tg_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    try:
        await user_service.create_user(
            tg_id=tg_id,
            username=username,
            first_name=first_name,
            last_name=last_name
        )
    except UserAlreadyExistsError:
        await user_service.change_user_last_msg(tg_id)

    text = ('–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è üòä\n'
            '–ú—ã ‚Äî –í–æ–≤–∞, –ê—Ä—Ç—É—Ä –∏ –û–ª–µ–≥, —Å–æ–∑–¥–∞—Ç–µ–ª–∏ –ß–∏–∑.\n\n'
            'üßÄ –ß–ò–ó –ò–ò ‚Äî <b>—ç—Ç–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å,</b> –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –∫—Ä—É—Ç—ã–µ —Ñ–æ—Ç–æ —Å –≤–∞—à–∏–º –ª–∏—Ü–æ–º, –æ—Ç—Ä–∞–∂–∞–µ—Ç –ª—É—á—à–∏–µ —á–µ—Ä—Ç—ã –∏ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª!\n\n'
            'üí° –†–∞–∑ —É–∂ –≤—ã –∑–¥–µ—Å—å –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Ä–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!')

    await message.answer_photo(
        photo=FSInputFile('tgbot/media/start_photo.jpg'),
        caption=text,
        reply_markup=start_kb()
    )


@router.callback_query(F.data == 'next')
async def examples_query(callback_query: CallbackQuery, user_service: UserService) -> None:
    tg_id = callback_query.from_user.id
    await user_service.change_user_last_msg(tg_id)

    text = ('üî• –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ç–æ–≥–æ, —á—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª–∞–µ—Ç –ß–ò–ó –ò–ò!\n\n'
            '–≠—Ç–æ —Ä–∞–±–æ—Ç—ã –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —á–∞—Ç–∞.\n\n'
            'üì∏ –ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—à—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö —Ñ–æ—Ç–æ –∏–∑ —Ñ–æ—Ç–æ–ø–ª–µ–Ω–∫–∏, –ò–ò –æ–±—É—á–∞–µ—Ç—Å—è —Ç–≤–æ–µ–º—É –∞–≤–∞—Ç–∞—Ä—É –∏ –∑–∞—Ç–µ–º —Ä–æ–∂–¥–∞—é—Ç—Å—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ–±—Ä–∞–∑—ã —Å —Ç–æ–±–æ–π!')

    await callback_query.message.answer_photo(
        photo=FSInputFile('tgbot/media/examples.jpg'),
        caption=text,
        reply_markup=explanation_kb()
    )
    await callback_query.answer()


@router.callback_query(F.data == 'thank_you_next')
async def final_msg_query(callback_query: CallbackQuery, user_service: UserService) -> None:
    tg_id = callback_query.from_user.id
    await user_service.change_user_last_msg(tg_id)

    text = ('üåü –£–∂–µ <b>–±–æ–ª–µ–µ 1 000 000 —á–µ–ª–æ–≤–µ–∫</b> –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –ß–ò–ó –ò–ò! –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å!\n\n'
            'üé≠üßû‚Äç‚ôÇÔ∏è –î–≤–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤—ã–±–æ—Ä:\n'
            '1Ô∏è‚É£ <b>–ì–æ—Ç–æ–≤—ã–µ –∏–¥–µ–∏</b> ‚Äî 100+ —Å—Ç–∏–ª–µ–π: –æ—Ç –±–æ–≥–µ–º–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –¥–æ —Ä–æ–∫-–∑–≤–µ–∑–¥—ã\n'
            '2Ô∏è‚É£ <b>–†–µ–∂–∏–º –ë–æ–≥–∞</b> ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –æ–±—Ä–∞–∑ –∏–ª–∏ —Å–∫–∏–¥—ã–≤–∞–µ—à—å —Ñ–æ—Ç–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å, –∞ –ò–ò —Å–æ–∑–¥–∞—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!\n\n'
            '‚ú® –¢–µ–ø–µ—Ä—å –∫ –≤–æ–ª—à–µ–±—Å—Ç–≤—É. –¢–∞–∫ –∫–∞–∫ –≤—ã –ø—Ä–∏—à–ª–∏ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –¥–ª—è –≤–∞—Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è!')

    await callback_query.message.answer_photo(
        photo=FSInputFile('tgbot/media/more_than_million.jpg'),
        caption=text,
        reply_markup=how_much_kb()
    )
    await callback_query.answer()


@router.callback_query(F.data.in_({'how_much', 'pay'}))
async def pay_msg_query(callback_query: CallbackQuery, user_service: UserService) -> None:
    tg_id = callback_query.from_user.id
    await user_service.change_user_last_msg(tg_id)

    text = ('üí• <b>–°–∫–∏–¥–∫–∞ 73%!</b>\n\n'
            'üí∞ <b>1390‚ÇΩ</b> –≤–º–µ—Å—Ç–æ <s>5150‚ÇΩ</s>\n\n'
            'üì¶ –í –ø–∞–∫–µ—Ç –≤—Ö–æ–¥–∏—Ç\n'
            '‚úÖ 90 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n'
            '‚úÖ 100 —Å—Ç–∏–ª–µ–π –Ω–∞ –≤—ã–±–æ—Ä\n'
            '‚úÖ 1 –º–æ–¥–µ–ª—å –∞–≤–∞—Ç–∞—Ä–∞\n'
            '‚úÖ –†–µ–∂–∏–º –ë–æ–≥–∞\n'
            '‚úÖ –ö–∞–Ω–∞–ª —Å 5.000 –∏–¥–µ–π\n'
            'üí¨ –ß–∞—Ç —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\n\n'
            '‚è≥ –ë–æ–Ω—É—Å! –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç ‚Äî –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 10 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –ø–æ–¥–∞—Ä–æ–∫! üéÅ')

    await callback_query.message.answer_photo(
        photo=FSInputFile('tgbot/media/pay_msg.jpg'),
        caption=text,
        reply_markup=payments_methods_kb()
    )
    await callback_query.answer()


@router.callback_query(F.data == 'payment')
async def payment_query(callback_query: CallbackQuery, user_service: UserService) -> None:
    tg_id = callback_query.from_user.id
    await user_service.change_user_last_msg(tg_id)

    await callback_query.message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏!')
    await callback_query.answer()
